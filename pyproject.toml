[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[project]
name = "rtt-ai-agent"
version = "0.1.0"
description = "AI agent for Rally The Troops board games"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "RTT AI Team"},
]
keywords = ["ai", "games", "reinforcement-learning", "board-games"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Games/Entertainment :: Board Games",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Core dependencies
    "numpy>=1.21.0",
    "gymnasium>=0.28.0",
    "pygame>=2.1.0",
    # Data handling
    "pandas>=1.3.0",
    "pydantic>=2.0.0",
    # Visualization
    "matplotlib>=3.5.0",
    "seaborn>=0.12.0",
    "tqdm>=4.65.0",
    # Utilities
    "python-dotenv>=1.0.0",
    "colorama>=0.4.6",
    "rich>=13.0.0",
    "click>=8.0.0",
    "networkx>=3.1",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    
    # Development tools
    "black>=23.0.0",
    "pylint>=2.17.0",
    "mypy>=1.3.0",
    "ipython>=8.0.0",
    "ruff>=0.1.0",
]

jupyter = [
    # Jupyter for experiments
    "jupyter>=1.0.0",
    "notebook>=6.5.0",
    "ipykernel>=6.0.0",
]

ml = [
    # Machine Learning (optional, commented for now)
    # "torch>=2.0.0",
    # "tensorflow>=2.13.0",
    # "stable-baselines3>=2.0.0",
    # "tensorboard>=2.13.0",
]

[project.scripts]
rtt-env = "src.game_env:main"
rtt-play = "src.interactive_play:main"
rtt-env-enhanced = "src.game_env_enhanced:main"

[project.urls]
Homepage = "https://rally-the-troops.com"
Repository = "https://github.com/your-username/rtt-ai-agent"
Documentation = "https://github.com/your-username/rtt-ai-agent/blob/main/README.md"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pylint.messages_control]
disable = [
    "missing-module-docstring",
    "missing-class-docstring", 
    "missing-function-docstring",
    "too-few-public-methods",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.ruff]
line-length = 88
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]  # assert allowed in tests

[tool.ruff.isort]
known-first-party = ["src"]
